<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- Choose wheel type -->
  <!-- Grey wheels -->
  <xacro:property name="wheel_color" value="Grey" />
  <xacro:property name="wheel_thickness" value="0.025" />
  <xacro:property name="wheel_radius" value="0.0375" />
  <!-- distance between center and *side* of wheel (NOT CENTER) -->
  <xacro:property name="wheel_offset_y" value="0.11" />
  <!-- Orange wheels -->
<!--
  <xacro:property name="wheel_color" value="Orange" />
  <xacro:property name="wheel_thickness" value="0.02032" />
  <xacro:property name="wheel_radius" value="0.06191" /> -->
  <!-- distance between center and *side* of wheel (NOT CENTER) -->
  <!--<xacro:property name="wheel_offset_y" value="0.11" />
-->
  
<!-- Generic properties -->
  <!-- distance between bottom ground plate and center wheel - dictated by bracket -->
  <xacro:property name="wheel_offset_z" value="-0.0138" />
    
  <xacro:property name="base_radius" value="0.15" />
  <xacro:property name="base_collision_radius" value="0.15" />
  <xacro:property name="base_collision_bottom_clearance" value="0.010" />
  <xacro:property name="base_thickness" value="0.006" />
  <!-- level1_clearance: distance between top ground plate and bottom level 1 plate (NOT centers) -->
  <xacro:property name="level1_clearance" value="0.053" />
  <!-- level2_clearance: distance between bottom level 1 plate and top level 2 plate (NOT centers) -->
  <xacro:property name="level2_clearance" value="0.065" />
  <!-- level3_clearance: distance between bottom level 2 plate and top level 3 plate (NOT centers) -->
  <xacro:property name="level3_clearance" value="0.09" />
  <xacro:property name="base_mesh_scale" value="1" />
  
  <xacro:property name="swivel_length" value="0.019" />
  <xacro:property name="swivel_radius" value="0.025" />
  
  <xacro:property name="sonar_offset_z" value="-0.018" />
  <xacro:property name="sonar_angle" value="0.6" />
  
  <xacro:property name="PI" value="3.1415926535897931" />

  <!-- define a rotating wheel -->
  <xacro:macro name="frobo_wheel" params="suffix parent reflect color">
    <joint name="${parent}_${suffix}_wheel_joint" type="continuous">
      <axis xyz="0 0 1" />
      <anchor xyz="0 0 0" />
      <limit effort="100" velocity="100"/>
      <safety_controller k_velocity="10" />
      <origin xyz="0 ${reflect*(wheel_offset_y+wheel_thickness/2)} ${wheel_offset_z}" rpy="${reflect*PI/2} 0 0" />
      <parent link="${parent}_link"/>
      <child link="${parent}_${suffix}_wheel_link"/>
    </joint>
    <link name="${parent}_${suffix}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
        <material name="${color}" /> 
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.2"/>
        <inertia 
          ixx="1e-3" ixy="0.0" ixz="0.0" 
          iyy="1e-3" iyz="0.0" 
          izz="1e-3"/>
      </inertial>
    </link>
  </xacro:macro>
  
  <!-- define a fixed wheel -->
  <xacro:macro name="frobo_wheel_fixed" params="reflect color">
      <visual>
        <origin xyz="0 ${reflect*(wheel_offset_y++wheel_thickness/2)} ${wheel_offset_z}" rpy="${PI/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
        <material name="${color}" />
      </visual>
  </xacro:macro>

  <!-- define a sonar -->
  <xacro:macro name="frobo_sonar" params="suffix parent offset_x offset_y angle color">
    <joint name="${parent}_${suffix}_sonar_joint" type="fixed">
      <origin xyz="${offset_x} ${offset_y} ${sonar_offset_z}" rpy="0 0 ${angle}" />
      <parent link="${parent}_link"/>
      <child link="${parent}_${suffix}_sonar_link"/>
    </joint>
    <link name="${parent}_${suffix}_sonar_link">
      <visual>
        <origin xyz="0 0 0" rpy="-${PI/2} 0 ${PI/2}" />
        <geometry>
          <mesh filename="package://frobo_description/meshes/sonar.stl"  /> 
        </geometry>
        <material name="${color}" />
      </visual>
    </link>
  </xacro:macro>
  
  <!-- define a base level -->
  <xacro:macro name="frobo_level" params="suffix parent offset_z color">
    <joint name="base_${suffix}_level_joint" type="fixed">
      <origin xyz="0 0 ${offset_z}" rpy="0 0 0" />
      <parent link="${parent}_link"/>
      <child link="base_${suffix}_level_link"/>
    </joint>
    <link name="base_${suffix}_level_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <cylinder radius="${base_radius}" length="${base_thickness}"/>
	    </geometry>
        <material name="${color}" /> 
      </visual>
     </link>
  </xacro:macro>
  
  <!-- define a standoff -->
  <xacro:macro name="frobo_standoff" params="offset_x offset_y">
      <visual>
        <!-- 0.144 -> it sticks out about 8 mm from the bottom plate
        i.e. mid is 0.25/2 - 0.008 -0.003 (thickness base) == 0.144 -->
        <origin xyz="${offset_x} ${offset_y} 0.114" rpy="0 0 0" />
        <geometry>
            <cylinder radius="0.002" length="0.25"/>
	    </geometry>
      </visual>
  </xacro:macro>

  <!-- define swivel -->
  <xacro:macro name="frobo_swivel" params="parent color offset_x offset_z">
    <joint name="base_to_rear_wheel" type="fixed">
      <parent link="${parent}_link"/>
      <child link="swivel_bottom"/>
      <origin xyz="${offset_x} 0 ${-0.01615+offset_z}" rpy="0 0 0"/>
      <anchor xyz="0 0 1" />
    </joint>
    <link name="swivel_bottom">
       <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.005 0.005 0.0323"/>
        </geometry>
        <material name="Grey" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
           <box size="0.005 0.005 0.0323"/>
        </geometry>
      </collision>
      <inertial>
       <mass value="0.1" />
       <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                   iyy="0.001" iyz="0.0"
                   izz="0.001" />
      </inertial>
    </link>
    <joint name="swivel_joint" type="fixed">
     <parent link="swivel_bottom"/>
     <child link="${parent}_swivel_link" />
     <origin xyz="0 0 -0.01615" rpy="${PI/2} 0 0" />
    </joint>
    <link name="${parent}_swivel_link">
      <visual>
        <geometry>
          <cylinder radius="0.016" length="0.015"/>
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <material name="${color}"/>
      </visual>
      <collision>
        <geometry>
          <cylinder radius="0.016" length="0.015"/>
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </collision>
      <inertial>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <mass value="0.01"/>
          <inertia
            ixx="0.01" ixy="0.0" ixz="0.0"
            iyy="0.01" iyz="0.0"
            izz="0.01"/>
      </inertial>
    </link>
  </xacro:macro>

  <!-- define base -->
  <xacro:macro name="base" params="color">
    <link name="base_footprint">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.001 0.001 0.001"/>
        </geometry>
        <material name="Black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
         <box size="0.001 0.001 0.001"/>
        </geometry>
      </collision>
    </link>
    <joint name="base_joint" type="fixed">
      <origin xyz="0 0 ${wheel_radius-wheel_offset_z}" rpy="0 0 0" />
      <parent link="base_footprint"/>
      <child link="base_link" />
    </joint>
    <link name="base_link">
      <visual>
        <!-- mesh is not centered in center, so need to take into account thickness -->
        <origin xyz="0 0 -${base_thickness/2}" rpy="0 0 ${PI/2}" />
        <geometry>
            <mesh filename="package://frobo_description/meshes/base.stl" scale="${base_mesh_scale} ${base_mesh_scale} ${base_mesh_scale}" /> 
	    </geometry>
        <material name="${color}" /> 
      </visual>
      <!-- standoffs -->
      <frobo_standoff offset_x="0.022" offset_y="-0.095"/>
      <frobo_standoff offset_x="-0.107" offset_y="-0.095"/>
      <frobo_standoff offset_x="0.022" offset_y="0.095"/>
      <frobo_standoff offset_x="-0.107" offset_y="0.095"/>

      <!-- fixed wheels, without tf transform, just for visualization - potentially more performant than rotating wheels-->
      <!-- multiple visuals all take the colour of the first visual, so useless to define this
        see http://answers.ros.org/question/154816/color-issue-with-urdf-and-multiple-visual-tags/
      -->
<!--
      <frobo_wheel_fixed reflect="1" color="${wheel_color}"/>
      <frobo_wheel_fixed reflect="-1" color="${wheel_color}"/>
-->
      
      <!-- fixed swivel, without tf transform, just for visualization -->
<!--
      <visual>
        <origin xyz="-${wheel_offset_y} 0 -${swivel_radius+base_thickness/2}" rpy="${PI/2} 0 0" />
        <geometry>
          <cylinder radius="${swivel_radius}" length="${swivel_length}"/>
        </geometry>
      </visual> 
-->

      <!-- basic collision protection, make sure to keep camera and lidar free for object detection 
      (otherwise it would be blocked by collision object) -->
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder radius="${base_collision_radius}" length="${(-wheel_radius+wheel_offset_z+base_collision_bottom_clearance)*2}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/> 
        <mass value="5"/>
        <inertia 
          ixx="10e-3" ixy="0.0" ixz="0.0" 
          iyy="10e-3" iyz="0.0" 
          izz="10e-3"/>
      </inertial>
    </link>
    
    <!-- levels -->
    <!-- clearances represent space in between levels, so need to add 2 times half the thickness of levels themselves
      which is equal to one time the thickness (as all levels have the same thickness) -->
    <frobo_level parent="base" suffix="1" offset_z="${base_thickness+level1_clearance}" color="${color}"/>
    <frobo_level parent="base_1_level" suffix="2" offset_z="${base_thickness+level2_clearance}" color="${color}"/>
    <frobo_level parent="base_2_level" suffix="3" offset_z="${base_thickness+level3_clearance}" color="${color}"/>
    
    <!-- rotating wheels -->
    <frobo_wheel parent="base" suffix="l" reflect="1" color="${wheel_color}"/>
    <frobo_wheel parent="base" suffix="r" reflect="-1" color="${wheel_color}"/>

    <!-- rotating swivel -->
    <frobo_swivel parent="base" color="Black" offset_x="-0.13" offset_z="-${base_thickness/2}"/>

    <!-- sonars -->
    <frobo_sonar parent="base" offset_x="0.115" offset_y="-0.055" angle="-${sonar_angle}" suffix="fr" color="Blue"/>
    <frobo_sonar parent="base" offset_x="0.125" offset_y="0" angle="0" suffix="fc" color="Blue"/>
    <frobo_sonar parent="base" offset_x="0.115" offset_y="0.055" angle="${sonar_angle}" suffix="fl" color="Blue"/>
	
  </xacro:macro>

</robot>
