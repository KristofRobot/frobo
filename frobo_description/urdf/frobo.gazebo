<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- Planar movement - not really real driving - but works
  <xacro:macro name="frobo_base_gazebo">
    <gazebo>
      <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <odometryRate>10.0</odometryRate>
        <robotBaseFrame>base_link</robotBaseFrame>
      </plugin>
    </gazebo>

    <gazebo reference="base_link">
      <gravity>true</gravity>
      <selfCollide>true</selfCollide>
    </gazebo>
  </xacro:macro>
-->

<!-- not working - TODO -->
  <xacro:macro name="frobo_base_gazebo">
    <gazebo>
      <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <alwaysOn>true</alwaysOn>
        <rosDebugLevel>na</rosDebugLevel>
        <publishTf>1</publishTf>
        <publishWheelTF>false</publishWheelTF>
        <publishWheelJointState>false</publishWheelJointState>
        <updateRate>10.0</updateRate>
        <leftJoint>base_r_wheel_joint</leftJoint>
        <rightJoint>base_l_wheel_joint</rightJoint>
        <wheelSeparation>0.2465</wheelSeparation>
        <wheelDiameter>0.075</wheelDiameter>
        <wheelAcceleration>1.0</wheelAcceleration> 
        <wheelTorque>20</wheelTorque>
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <robotBaseFrame>base_footprint</robotBaseFrame>
      </plugin>
    </gazebo>
    
  </xacro:macro>


  <!-- base -->
  <gazebo reference="base_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  
  <gazebo reference="base_1_level_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  
  <gazebo reference="base_2_level_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  
  <gazebo reference="base_3_level_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  
  <gazebo reference="base_r_wheel_link">
    <material>Gazebo/Grey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  
  <gazebo reference="base_l_wheel_link">
    <material>Gazebo/Grey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo> 
  
  <gazebo reference="base_swivel_link">
    <material>Gazebo/Grey</material>
  </gazebo> 
  

  <!-- kinect camera -->
<!--
  <gazebo reference="head_camera_depth_frame">
    <material>Gazebo/Black</material>
    <sensor type="depth" name="head_camera">
      <update_rate>5</update_rate>
      <camera>
        <horizontal_fov>${60 * PI/180.0}</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin name="head_camera_camera_controller" filename="libgazebo_ros_depth_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <cameraName>head_camera</cameraName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>head_camera_depth_optical_frame</frameName>
	<pointCloudCutoff>0.4</pointCloudCutoff> 
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
       </plugin>
    </sensor>
  </gazebo>
-->

  <!-- lidar -->
<!--
  <gazebo reference="lidar_link">
    <material>Gazebo/Black</material>
    <sensor type="ray" name="head_lidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>${2*PI}</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.06</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type> 
-->
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
<!--
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise> 
      </ray>
      <plugin name="gazebo_ros_head_lidar_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo> 
-->

</robot>
